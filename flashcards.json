{
  "titre": "üéØ Flashcards: cin.ignore() en C++",
  "cards": [
    {
      "question": "Qu'est-ce que <code>cin.ignore()</code> ?",
      "reponse": "C'est une fonction de la classe <code>istream</code> qui permet d'ignorer (supprimer) des caract√®res du flux d'entr√©e."
    },
    {
      "question": "Quelle est la syntaxe compl√®te de <code>cin.ignore()</code> ?",
      "reponse": "<code>cin.ignore(n, delim)</code><br><br><strong>n</strong> : nombre max de caract√®res √† ignorer<br><strong>delim</strong> : caract√®re d√©limiteur (optionnel)"
    },
    {
      "question": "Pourquoi utiliser <code>cin.ignore()</code> apr√®s <code>cin >> variable</code> ?",
      "reponse": "Pour supprimer le caract√®re de nouvelle ligne (<code>\\n</code>) laiss√© dans le buffer apr√®s une lecture avec <code>>></code>, qui sinon serait lu par <code>getline()</code>."
    },
    {
      "question": "Quelle est la forme la plus courante de <code>cin.ignore()</code> ?",
      "reponse": "<code>cin.ignore(numeric_limits&lt;streamsize&gt;::max(), '\\n')</code><br><br>Ignore tous les caract√®res jusqu'au prochain <code>\\n</code> inclus."
    },
    {
      "question": "Que fait <code>cin.ignore()</code> sans param√®tres ?",
      "reponse": "Ignore exactement 1 caract√®re du flux d'entr√©e.<br><br>√âquivalent √† <code>cin.ignore(1)</code>"
    },
    {
      "question": "Cas d'usage typique : m√©lange de <code>cin >></code> et <code>getline()</code>",
      "reponse": "<code>int age;<br>cin >> age;<br>cin.ignore(); // Important !<br>string nom;<br>getline(cin, nom);</code>"
    },
    {
      "question": "Que se passe-t-il si on oublie <code>cin.ignore()</code> ?",
      "reponse": "<code>getline()</code> lira le <code>\\n</code> rest√© dans le buffer et retournera une cha√Æne vide au lieu d'attendre la saisie de l'utilisateur."
    },
    {
      "question": "Quelle biblioth√®que inclure pour utiliser <code>numeric_limits</code> ?",
      "reponse": "<code>#include &lt;limits&gt;</code><br><br>N√©cessaire pour utiliser <code>numeric_limits&lt;streamsize&gt;::max()</code>"
    },
    {
      "question": "Peut-on utiliser un d√©limiteur autre que <code>\\n</code> ?",
      "reponse": "Oui ! Par exemple :<br><code>cin.ignore(100, ',')</code><br><br>Ignore jusqu'√† 100 caract√®res ou jusqu'√† une virgule."
    }
  ]
}
